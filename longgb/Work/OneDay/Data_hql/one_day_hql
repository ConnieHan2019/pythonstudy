-- 取出纸品 1671
-- SQL模板
--set hive.exec.dynamic.partition=true;
--set hive.exec.dynamic.partition.mode=nonstrict;
--CREATE TABLE IF Not EXISTS dev.tmp_oneday_rdc_info
--(
--    rdc_id	    string,
--    sku_id	    string,
--    open_po	    double,
--    inv         double,
--    variance    string,
--    ofdsales    string)
--    PARTITIONED by (date_s  string);
--
--insert OVERWRITE table dev.tmp_oneday_rdc_info  partition(date_s)
--select
--    a.rdc_id,
--    a.sku_id,
--    a.open_po,
--    a.inv,
--    b.variance,
--    b.ofdsales,
--    a.date_s
--from
--    (
--        SELECT
--            delv_center_num as rdc_id,
--            dt as date_s,
--            sku_id,
--            sum(in_transit_qtty) AS open_po,
--            sum(stock_qtty) AS inv --库存数量
--        FROM
--            gdm.gdm_m08_item_stock_day_sum	     	-- 【主表】商品库存日汇总
--        WHERE
--            dt >= '2016-01-01' AND
--            dt <= '2017-03-01' AND
--            delv_center_num in (3, 4, 5, 6, 9, 10, 316, 682)
--        group by
--            delv_center_num,
--            dt,
--            sku_id
--    ) a
--full outer join
--    (
--        select
--		  	dt  as date_s,
--			wid  as sku_id,
--			dcid  as rdc_id,
--			variance,
--			ofdsales
--		from
--			app.app_sfs_rdc_forecast_result
--		where
--		    dt >= '2016-01-01' and
--		    dt <= '2017-03-01' and
--		    dcid in (3, 4, 5, 6, 9, 10, 316, 682)
--    ) b
--on
--    a.sku_id = b.sku_id  and
--    a.rdc_id = b.rdc_id  and
--    a.date_s = b.date_s
--order by
--    a.date_s;
--
--
---- 建立非分区的表
--drop table if exists dev.tmp_oneday_rdc_info_noPartition;
--
--CREATE TABLE IF Not EXISTS dev.tmp_oneday_rdc_info_noPartition
--(
--    rdc_id	    string,
--    sku_id	    string,
--    open_po	    double,
--    inv         double,
--    variance    string,
--    ofdsales    string,
--    date_s      string);
--
--insert OVERWRITE table dev.tmp_oneday_rdc_info_noPartition
--select
--    a.rdc_id,
--    a.sku_id,
--    a.open_po,
--    a.inv,
--    b.variance,
--    b.ofdsales,
--    a.date_s
--from
--    (
--        SELECT
--            delv_center_num as rdc_id,
--            dt as date_s,
--            sku_id,
--            sum(in_transit_qtty) AS open_po,
--            sum(stock_qtty) AS inv --库存数量
--        FROM
--            gdm.gdm_m08_item_stock_day_sum	     	-- 【主表】商品库存日汇总
--        WHERE
--            dt >= '2016-01-01' AND
--            dt <= '2017-03-01' AND
--            delv_center_num in (3, 4, 5, 6, 9, 10, 316, 682)
--        group by
--            delv_center_num,
--            dt,
--            sku_id
--    ) a
--full outer join
--    (
--        select
--		  	dt  as date_s,
--			wid  as sku_id,
--			dcid  as rdc_id,
--			variance,
--			ofdsales
--		from
--			app.app_sfs_rdc_forecast_result
--		where
--		    dt >= '2016-01-01' and
--		    dt <= '2017-03-01' and
--		    dcid in (3, 4, 5, 6, 9, 10, 316, 682)
--    ) b
--on
--    a.sku_id = b.sku_id  and
--    a.rdc_id = b.rdc_id  and
--    a.date_s = b.date_s
--order by
--    a.rdc_id,
--    a.sku_id,
--    a.date_s;


-- 1、选取 autoPO 的三级品类
drop table if exists dev.tmp_oneday_rdc_info_noPartition_skuList;
CREATE TABLE dev.tmp_oneday_rdc_info_noPartition_skuList as
SELECT
    item_sku_id  as sku_id,
    item_third_cate_cd,
    item_second_cate_cd
FROM
    gdm.gdm_m03_item_sku_da
WHERE
    dt= sysdate(-1)  and
    data_type = '1'  and
    item_third_cate_cd in ( select
                                item_third_cate_cd
                            from
                                dev.dev_autopo_third_cate
                           );


-- 统计有多少个 SKU
SELECT
	COUNT(1)
FROM
	dev.tmp_oneday_rdc_info_noPartition_skuList
-- 原先 ： 2664  ("1671")
-- 现在 ： 106012  (40多个3级品类)



-- 拆分建表
-- 2、建立上表               取 库存、在途 的数据
drop table if exists dev.tmp_oneday_rdc_info_noPartition_upper;
CREATE TABLE dev.tmp_oneday_rdc_info_noPartition_upper as
SELECT
    delv_center_num as rdc_id,
    dt as date_s,
    sku_id,
    sum(in_transit_qtty) AS open_po,
    sum(stock_qtty) AS inv --库存数量
FROM
    gdm.gdm_m08_item_stock_day_sum	     	-- 【主表】商品库存日汇总
WHERE
    dt >= '2016-03-01' AND
    dt <= '2017-03-01' AND
    delv_center_num in (3, 4, 5, 6, 9, 10, 316, 682)  and
    sku_id in ( select
                    m.sku_id
                from
                    dev.tmp_oneday_rdc_info_noPartition_skuList  m
                )
group by
    delv_center_num,
    dt,
    sku_id;


-- 3、建立下表               取 均值、标准差 的数据
drop table if exists dev.tmp_oneday_rdc_info_noPartition_lower;
CREATE TABLE dev.tmp_oneday_rdc_info_noPartition_lower as
select
    dt  as date_s,
    wid  as sku_id,
    dcid  as rdc_id,
    variance,
    ofdsales
from
    app.app_sfs_rdc_forecast_result
where
    dt >= '2016-03-01' and
    dt <= '2017-03-01' and
    dcid in (3, 4, 5, 6, 9, 10, 316, 682)  and
    wid in (select
                m.sku_id
            from
                dev.tmp_oneday_rdc_info_noPartition_skuList  m
            )


-- 4、取出销量数据
drop table if exists dev.tmp_oneday_rdc_sales;
CREATE TABLE dev.tmp_oneday_rdc_sales as
select
    sku_id,
    dc_id  as rdc_id,
    order_date,
    total_sales,
    dt   as date_s
from
    app.app_sfs_sales_region
where
    dt >= '2016-03-01'  and
    dt <= '2017-03-01'  and
    dc_id in (3, 4, 5, 6, 9, 10, 316, 682)  and
    sku_id in (select
                m.sku_id
            from
                dev.tmp_oneday_rdc_info_noPartition_skuList  m
            )


---- 统计一下这个
--SELECT
--    count(DISTINCT item_sku_id)
--FROM
--    gdm.gdm_m03_item_sku_da
--WHERE
--    dt= sysdate( - 1)
--    and item_third_cate_cd = '1671'
--    and data_type = '1';


-- 4、假如成功，使用以下SQL合并
drop table if exists dev.tmp_oneday_rdc_info_noPartition;
CREATE TABLE dev.tmp_oneday_rdc_info_noPartition as
select
    e.rdc_id,
    e.sku_id,
    e.item_second_cate_cd,
    e.item_third_cate_cd,
    e.open_po,
    e.inv,
    e.variance,
    e.ofdsales,
    f.order_date,
    f.total_sales,
    e.date_s
from
    (
        select
            c.rdc_id,
            c.sku_id,
            c.item_second_cate_cd,
            c.item_third_cate_cd,
            c.open_po,
            c.inv,
            d.variance,
            d.ofdsales,
            c.date_s
        from
            (
                select
                    b.rdc_id,
                    a.sku_id,
                    a.item_second_cate_cd,
                    a.item_third_cate_cd,
                    b.open_po,
                    b.inv,
                    b.date_s
                from
                    dev.tmp_oneday_rdc_info_noPartition_skuList  a
                left join
                    dev.tmp_oneday_rdc_info_noPartition_upper  b
                on
                    a.sku_id = b.sku_id and
                    b.rdc_id is not null
            ) c
        left join
            dev.tmp_oneday_rdc_info_noPartition_lower  d
        on
            c.sku_id = d.sku_id  and
            c.rdc_id = d.rdc_id  and
            c.date_s = d.date_s  and
            c.rdc_id is not null
    ) e
left join
    dev.tmp_oneday_rdc_sales f
on
    e.sku_id = f.sku_id  and
    e.rdc_id = f.rdc_id  and
    e.date_s = f.date_s


-- 6、将销量预测数据加入合并
--drop table if exists dev.tmp_oneday_rdc_info_combine;
--CREATE TABLE dev.tmp_oneday_rdc_info_combine as
--select
--    a.rdc_id,
--    a.sku_id,
--    a.item_second_cate_cd,
--    a.item_third_cate_cd,
--    a.open_po,
--    a.inv,
--    a.variance,
--    a.ofdsales,
--    b.order_date,
--    b.total_sales,
--    a.date_s
--from
--    (
--        select
--            d.rdc_id,
--            d.sku_id,
--            d.item_second_cate_cd,
--            d.item_third_cate_cd,
--            d.open_po,
--            d.inv,
--            d.variance,
--            d.ofdsales,
--            d.date_s
--        from
--            dev.tmp_oneday_rdc_info_noPartition  d
--        where
--            d.rdc_id is not null
--    )  a
--left join
--    dev.tmp_oneday_rdc_sales  b
--on
--    a.sku_id = b.sku_id  and
--    a.rdc_id = b.rdc_id  and
--    a.date_s = b.date_s


--drop table if exists dev.tmp_oneday_rdc_info_noPartition_skuList;
--CREATE TABLE dev.tmp_oneday_rdc_info_noPartition_skuList as
--SELECT
--    item_sku_id  as sku_id,
--    item_third_cate_cd,
--    item_second_cate_cd
--FROM
--    gdm.gdm_m03_item_sku_da
--WHERE
--    dt= sysdate(-1)
--    and item_third_cate_cd = '1671'
--    and data_type = '1';


--    app.app_sfs_rdc_forecast_result 只有 2016-02-19 至 2017-03-07的数据
--    a.rdc_id,                 RDC
--    a.sku_id,                 SKU
--    a.item_second_cate_cd,    二级品类
--    a.item_third_cate_cd,     三级品类
--    a.open_po,                采购在途
--    a.inv,                    库存
--    a.variance,               预测标准差
--    a.ofdsales,               预测均值
--    b.order_date,
--    b.total_sales,            销量
--    a.date_s                  日期



-- one_day 基本信息
-- 47 个三级品类。
-- 106012 个SKU。 dev.tmp_oneday_rdc_info_noPartition_skuList             sku_id
-- 总共 264344290 条记录。 dev.tmp_oneday_rdc_info_noPartition_upper       open_po, inv
-- 总共 68260289 条记录。 dev.tmp_oneday_rdc_info_noPartition_lower        variance, ofdsales
-- 总共 11154224 条记录。 dev.tmp_oneday_rdc_sales                         total_sales,
-- 过滤前的数据量。265082156 条。
-- 过滤后的数据量。67602588 条。  保留了25.5025%的数据。



